/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import javax.swing.*;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import static sun.swing.MenuItemLayoutHelper.max;

/**
 *
 * @author richy
 */
public class product extends javax.swing.JFrame {

    /**
     * Creates new form product
     */
    public product() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        sizeTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        weightTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        priceTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        colorTextField = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        name = new javax.swing.JLabel();
        size = new javax.swing.JLabel();
        weight = new javax.swing.JLabel();
        price = new javax.swing.JLabel();
        color = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        Update = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        listName1 = new javax.swing.JLabel();
        productId1 = new javax.swing.JLabel();
        jCheckBox6 = new javax.swing.JCheckBox();
        listName2 = new javax.swing.JLabel();
        productId2 = new javax.swing.JLabel();
        jCheckBox7 = new javax.swing.JCheckBox();
        listName3 = new javax.swing.JLabel();
        prductId3 = new javax.swing.JLabel();
        jCheckBox8 = new javax.swing.JCheckBox();
        listName4 = new javax.swing.JLabel();
        productId4 = new javax.swing.JLabel();
        jCheckBox9 = new javax.swing.JCheckBox();
        listName5 = new javax.swing.JLabel();
        productId5 = new javax.swing.JLabel();
        jCheckBox10 = new javax.swing.JCheckBox();
        jButton9 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jCheckBox11 = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        statusProductId = new javax.swing.JLabel();
        statusId1 = new javax.swing.JLabel();
        jCheckBox12 = new javax.swing.JCheckBox();
        productStatus2 = new javax.swing.JLabel();
        statusId2 = new javax.swing.JLabel();
        jCheckBox13 = new javax.swing.JCheckBox();
        productStatus3 = new javax.swing.JLabel();
        statusId3 = new javax.swing.JLabel();
        jCheckBox14 = new javax.swing.JCheckBox();
        productStatus4 = new javax.swing.JLabel();
        statusId4 = new javax.swing.JLabel();
        jCheckBox15 = new javax.swing.JCheckBox();
        productStatusId5 = new javax.swing.JLabel();
        statusId5 = new javax.swing.JLabel();
        jCheckBox16 = new javax.swing.JCheckBox();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        jButton2.setText("Remove product");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jTree1);

        jButton1.setText("Add product");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(204, 204, 204));
        jButton3.setText("Add product");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(204, 204, 204));
        jButton4.setText("Remove product");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setBackground(new java.awt.Color(204, 204, 204));
        jToolBar1.setRollover(true);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Product Information");
        jToolBar1.add(jLabel6);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setText("Actions");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setText("List");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel12.setText("Status");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(190, 190, 190)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(209, 209, 209)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 180, Short.MAX_VALUE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel7)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(14, 14, 14))
        );

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Name");

        nameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Size");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Weight(kg)");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Price");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Color");

        jButton5.setText("Add Product");

        jButton5.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                String name = nameTextField.getText();
                String size = sizeTextField.getText();
                String weight = weightTextField.getText();
                String price = priceTextField.getText();
                String color = colorTextField.getText();
                boolean empty = false;
                if(name.isEmpty()||size.isEmpty()||weight.isEmpty()||color.isEmpty()||price.isEmpty()){
                    if (name.isEmpty()){
                        JOptionPane.showMessageDialog(jPanel1,"Enter Name");
                    }
                    else if(size.isEmpty()){
                        JOptionPane.showMessageDialog(jPanel1,"Enter Size");
                    }else if(weight.isEmpty()){
                        JOptionPane.showMessageDialog(jPanel1,"Enter Weight");
                    }else if(price.isEmpty()){
                        JOptionPane.showMessageDialog(jPanel1,"Enter Price");

                    }else{
                        JOptionPane.showMessageDialog(jPanel1,"Enter Color");
                    }

                }
                else {
                    empty=true;
                }
                if(empty) {
                    boolean[] dataFiltered = new boolean[5];
                    if (name.matches("^[a-zA-Z0-9]*$")) {
                        dataFiltered[0]=true;
                    }
                    else {
                        JOptionPane.showMessageDialog(jPanel1,"Invalid Name");
                    }

                    if (color.matches("^[a-zA-Z]*$")) {
                        dataFiltered[4]=true;
                    }
                    else {
                        JOptionPane.showMessageDialog(jPanel1,"Invalid Colour");
                    }
                    float newSize=0;
                    try {
                        newSize = Float.parseFloat(size);
                        if(newSize==Float.parseFloat(size)){
                            dataFiltered[1]=true;
                        }
                    }catch (NumberFormatException sizeException){
                        JOptionPane.showMessageDialog(jPanel1, "Invalid Size");
                    }
                    float newWeight=0;
                    try {
                        newWeight = Float.parseFloat(weight);
                        if(newWeight==Float.parseFloat(weight)){
                            dataFiltered[2]=true;
                        }
                    }catch (NumberFormatException sizeException){
                        JOptionPane.showMessageDialog(jPanel1, "Invalid Weight");
                    }
                    float newPrice = 0;
                    try
                    {
                        newPrice = Float.parseFloat(price);
                        if(newPrice == Float.parseFloat(price))
                        {
                            dataFiltered[3]=true;
                        }
                    }
                    catch (NumberFormatException exception)
                    {
                        JOptionPane.showMessageDialog(jPanel1, "Invalid price");
                    }
//dataFiltered[]  is an array of boolean with true as correct filtration
                    if(dataFiltered[0]&&dataFiltered[1]&&dataFiltered[2]&&dataFiltered[3]&&dataFiltered[4]){
                        if(databaseControl.productInsert(name,newSize,newWeight,newPrice,color)){
                            JOptionPane.showMessageDialog(jPanel2,"Data added");
                            displayproducts();
                        }
                        else {
                            JOptionPane.showMessageDialog(jPanel2,"Error Occurred");
                        }
                    }

                }
            }
        });


        jButton6.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e)
            {
                if(jCheckBox1.isSelected())
                {
                    Update.setText(name.getText());
                }
                else if (jCheckBox2.isSelected())
                {
                    Update.setText(size.getText());
                }
                else if(jCheckBox3.isSelected())
                {
                    Update.setText(weight.getText());
                }
                else if(jCheckBox4.isSelected())
                {
                    Update.setText(price.getText());
                }
                else if(jCheckBox5.isSelected())
                {
                    Update.setText(color.getText());
                }
                else
                {
                    JOptionPane.showMessageDialog(jPanel3,"Not Item is Selected");
                }
            }
        });
        jButton7.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String data=Update.getText();
                boolean valid = false;
                if(jCheckBox1.isSelected()||jCheckBox5.isSelected()){

                    if(data.isEmpty()) {
                        JOptionPane.showMessageDialog(jPanel3, "Enter Data to Update");

                    }
                    else {//name update
                        if(jCheckBox1.isSelected()){

                            if (data.matches("^[a-zA-Z0-9]*$")) {
                                //update database

                                if(jCheckBox6.isSelected())
                                {
                                    String productId= productId1.getText();
                                    if(databaseControl.nameupdate(data,productId)){
                                        jCheckBox6.setEnabled(true);
                                        jCheckBox7.setEnabled(true);
                                        jCheckBox8.setEnabled(true);
                                        jCheckBox9.setEnabled(true);
                                        jCheckBox10.setEnabled(true);
                                        jCheckBox11.setEnabled(true);
                                        displayproducts();
                                        JOptionPane.showMessageDialog(jPanel3,"Update Recieved");
                                    }else {
                                        JOptionPane.showMessageDialog(jPanel3,"Error occurred");

                                    }
                                }
                                else if(jCheckBox7.isSelected())
                                {
                                    String productId= productId2.getText();
                                    if(databaseControl.nameupdate(data,productId)){
                                        jCheckBox6.setEnabled(true);
                                        jCheckBox7.setEnabled(true);
                                        jCheckBox8.setEnabled(true);
                                        jCheckBox9.setEnabled(true);
                                        jCheckBox10.setEnabled(true);
                                        jCheckBox11.setEnabled(true);
                                        displayproducts();
                                        JOptionPane.showMessageDialog(jPanel3,"Update Recieved");
                                    }else {
                                        JOptionPane.showMessageDialog(jPanel3,"Error occurred");

                                    }
                                }
                                else if(jCheckBox8.isSelected())
                                {
                                    String productId= prductId3.getText();
                                    if(databaseControl.nameupdate(data,productId)){
                                        jCheckBox6.setEnabled(true);
                                        jCheckBox7.setEnabled(true);
                                        jCheckBox8.setEnabled(true);
                                        jCheckBox9.setEnabled(true);
                                        jCheckBox10.setEnabled(true);
                                        jCheckBox11.setEnabled(true);
                                        displayproducts();
                                        JOptionPane.showMessageDialog(jPanel3,"Update Recieved");
                                    }else {
                                        JOptionPane.showMessageDialog(jPanel3,"Error occurred");

                                    }
                                }
                                else if(jCheckBox9.isSelected())
                                {
                                    String productId= productId4.getText();
                                    if(databaseControl.nameupdate(data,productId)){
                                        jCheckBox6.setEnabled(true);
                                        jCheckBox7.setEnabled(true);
                                        jCheckBox8.setEnabled(true);
                                        jCheckBox9.setEnabled(true);
                                        jCheckBox10.setEnabled(true);
                                        jCheckBox11.setEnabled(true);
                                        displayproducts();
                                        JOptionPane.showMessageDialog(jPanel3,"Update Recieved");
                                    }else {
                                        JOptionPane.showMessageDialog(jPanel3,"Error occurred");

                                    }
                                }
                                else if(jCheckBox11.isSelected())
                                {
                                    String productId= productId5.getText();
                                    if(databaseControl.nameupdate(data,productId)){
                                        jCheckBox6.setEnabled(true);
                                        jCheckBox7.setEnabled(true);
                                        jCheckBox8.setEnabled(true);
                                        jCheckBox9.setEnabled(true);
                                        jCheckBox10.setEnabled(true);
                                        jCheckBox11.setEnabled(true);
                                        displayproducts();
                                        JOptionPane.showMessageDialog(jPanel3,"Update Recieved");
                                    }else {
                                        JOptionPane.showMessageDialog(jPanel3,"Error occurred");

                                    }
                                }
                            }
                            else {
                                JOptionPane.showMessageDialog(jPanel3,"Enter a valid name");
                            }
                        }//colour update
                        else if(jCheckBox5.isSelected()){
                            if (data.matches("^[a-zA-Z0-9]*$")) {
                                //update database
                                if(jCheckBox6.isSelected())
                                {
                                    String productId= productId1.getText();
                                    if(databaseControl.coloutUpdate(data,productId)){
                                        jCheckBox6.setEnabled(true);
                                        jCheckBox7.setEnabled(true);
                                        jCheckBox8.setEnabled(true);
                                        jCheckBox9.setEnabled(true);
                                        jCheckBox10.setEnabled(true);
                                        jCheckBox11.setEnabled(true);
                                        displayproducts();
                                        JOptionPane.showMessageDialog(jPanel3,"Update Recieved");
                                    }else {
                                        JOptionPane.showMessageDialog(jPanel3,"Error occurred");

                                    }
                                }
                                else if(jCheckBox7.isSelected())
                                {
                                    String productId= productId2.getText();
                                    if(databaseControl.coloutUpdate(data,productId)){
                                        jCheckBox6.setEnabled(true);
                                        jCheckBox7.setEnabled(true);
                                        jCheckBox8.setEnabled(true);
                                        jCheckBox9.setEnabled(true);
                                        jCheckBox10.setEnabled(true);
                                        jCheckBox11.setEnabled(true);
                                        displayproducts();
                                        JOptionPane.showMessageDialog(jPanel3,"Update Recieved");
                                    }else {
                                        JOptionPane.showMessageDialog(jPanel3,"Error occurred");

                                    }
                                }
                                else if(jCheckBox8.isSelected())
                                {
                                    String productId= prductId3.getText();
                                    if(databaseControl.coloutUpdate(data,productId)){
                                        jCheckBox6.setEnabled(true);
                                        jCheckBox7.setEnabled(true);
                                        jCheckBox8.setEnabled(true);
                                        jCheckBox9.setEnabled(true);
                                        jCheckBox10.setEnabled(true);
                                        jCheckBox11.setEnabled(true);
                                        displayproducts();
                                        JOptionPane.showMessageDialog(jPanel3,"Update Recieved");
                                    }else {
                                        JOptionPane.showMessageDialog(jPanel3,"Error occurred");

                                    }
                                }
                                else if(jCheckBox9.isSelected())
                                {
                                    String productId= productId4.getText();
                                    if(databaseControl.coloutUpdate(data,productId)){
                                        jCheckBox6.setEnabled(true);
                                        jCheckBox7.setEnabled(true);
                                        jCheckBox8.setEnabled(true);
                                        jCheckBox9.setEnabled(true);
                                        jCheckBox10.setEnabled(true);
                                        jCheckBox11.setEnabled(true);
                                        displayproducts();
                                        JOptionPane.showMessageDialog(jPanel3,"Update Recieved");
                                    }else {
                                        JOptionPane.showMessageDialog(jPanel3,"Error occurred");

                                    }
                                }
                                else if(jCheckBox11.isSelected())
                                {
                                    String productId= productId5.getText();
                                    if(databaseControl.coloutUpdate(data,productId)){
                                        jCheckBox6.setEnabled(true);
                                        jCheckBox7.setEnabled(true);
                                        jCheckBox8.setEnabled(true);
                                        jCheckBox9.setEnabled(true);
                                        jCheckBox10.setEnabled(true);
                                        jCheckBox11.setEnabled(true);
                                        displayproducts();
                                        JOptionPane.showMessageDialog(jPanel3,"Update Recieved");
                                    }else {
                                        JOptionPane.showMessageDialog(jPanel3,"Error occurred");

                                    }
                                }
                            }
                            else {
                                JOptionPane.showMessageDialog(jPanel3,"Enter a valid Colour");
                            }
                        }
                    }
                }


                else {
                    if(jCheckBox2.isSelected()||jCheckBox3.isSelected()||jCheckBox4.isSelected()) {
                        if (data.isEmpty()) {
                            JOptionPane.showMessageDialog(jPanel3, "Enter Data to Update");
                        } else {
                            if (jCheckBox2.isSelected()) {
                                float newSize = 0;
                                try {
                                    newSize = Float.parseFloat(data);
                                    if (newSize == Float.parseFloat(data)) {
                                        //update db
                                        if (jCheckBox6.isSelected()) {
                                            String productId = productId1.getText();
                                            if (databaseControl.sizeUpdate(data, productId)) {
                                                jCheckBox6.setEnabled(true);
                                                jCheckBox7.setEnabled(true);
                                                jCheckBox8.setEnabled(true);
                                                jCheckBox9.setEnabled(true);
                                                jCheckBox10.setEnabled(true);
                                                jCheckBox11.setEnabled(true);
                                                displayproducts();
                                                JOptionPane.showMessageDialog(jPanel3, "Update Recieved");
                                            } else {
                                                JOptionPane.showMessageDialog(jPanel3, "Error occurred");

                                            }
                                        } else if (jCheckBox7.isSelected()) {
                                            String productId = productId2.getText();
                                            if (databaseControl.sizeUpdate(data, productId)) {
                                                jCheckBox6.setEnabled(true);
                                                jCheckBox7.setEnabled(true);
                                                jCheckBox8.setEnabled(true);
                                                jCheckBox9.setEnabled(true);
                                                jCheckBox10.setEnabled(true);
                                                jCheckBox11.setEnabled(true);
                                                displayproducts();
                                                JOptionPane.showMessageDialog(jPanel3, "Update Recieved");
                                            } else {
                                                JOptionPane.showMessageDialog(jPanel3, "Error occurred");

                                            }
                                        } else if (jCheckBox8.isSelected()) {
                                            String productId = prductId3.getText();
                                            if (databaseControl.sizeUpdate(data, productId)) {
                                                jCheckBox6.setEnabled(true);
                                                jCheckBox7.setEnabled(true);
                                                jCheckBox8.setEnabled(true);
                                                jCheckBox9.setEnabled(true);
                                                jCheckBox10.setEnabled(true);
                                                jCheckBox11.setEnabled(true);
                                                displayproducts();
                                                JOptionPane.showMessageDialog(jPanel3, "Update Recieved");
                                            } else {
                                                JOptionPane.showMessageDialog(jPanel3, "Error occurred");

                                            }
                                        } else if (jCheckBox9.isSelected()) {
                                            String productId = productId4.getText();
                                            if (databaseControl.sizeUpdate(data, productId)) {
                                                jCheckBox6.setEnabled(true);
                                                jCheckBox7.setEnabled(true);
                                                jCheckBox8.setEnabled(true);
                                                jCheckBox9.setEnabled(true);
                                                jCheckBox10.setEnabled(true);
                                                jCheckBox11.setEnabled(true);
                                                displayproducts();
                                                JOptionPane.showMessageDialog(jPanel3, "Update Recieved");
                                            } else {
                                                JOptionPane.showMessageDialog(jPanel3, "Error occurred");

                                            }
                                        } else if (jCheckBox11.isSelected()) {
                                            String productId = productId5.getText();
                                            if (databaseControl.sizeUpdate(data, productId)) {
                                                jCheckBox6.setEnabled(true);
                                                jCheckBox7.setEnabled(true);
                                                jCheckBox8.setEnabled(true);
                                                jCheckBox9.setEnabled(true);
                                                jCheckBox10.setEnabled(true);
                                                jCheckBox11.setEnabled(true);
                                                displayproducts();
                                                JOptionPane.showMessageDialog(jPanel3, "Update Recieved");
                                            } else {
                                                JOptionPane.showMessageDialog(jPanel3, "Error occurred");

                                            }
                                        }
                                    }
                                } catch (NumberFormatException sizeException) {
                                    JOptionPane.showMessageDialog(jPanel3, "Invalid Size");
                                }
                            } else if (jCheckBox3.isSelected()) {
                                float newWeight = 0;
                                try {
                                    newWeight = Float.parseFloat(data);
                                    if (newWeight == Float.parseFloat(data)) {
                                        //update db
                                        if (jCheckBox6.isSelected()) {
                                            String productId = productId1.getText();
                                            if (databaseControl.weigthtUpdate(data, productId)) {
                                                jCheckBox6.setEnabled(true);
                                                jCheckBox7.setEnabled(true);
                                                jCheckBox8.setEnabled(true);
                                                jCheckBox9.setEnabled(true);
                                                jCheckBox10.setEnabled(true);
                                                jCheckBox11.setEnabled(true);
                                                displayproducts();
                                                JOptionPane.showMessageDialog(jPanel3, "Update Recieved");
                                            } else {
                                                JOptionPane.showMessageDialog(jPanel3, "Error occurred");

                                            }
                                        } else if (jCheckBox7.isSelected()) {
                                            String productId = productId2.getText();
                                            if (databaseControl.weigthtUpdate(data, productId)) {
                                                jCheckBox6.setEnabled(true);
                                                jCheckBox7.setEnabled(true);
                                                jCheckBox8.setEnabled(true);
                                                jCheckBox9.setEnabled(true);
                                                jCheckBox10.setEnabled(true);
                                                jCheckBox11.setEnabled(true);
                                                displayproducts();
                                                JOptionPane.showMessageDialog(jPanel3, "Update Recieved");
                                            } else {
                                                JOptionPane.showMessageDialog(jPanel3, "Error occurred");

                                            }
                                        } else if (jCheckBox8.isSelected()) {
                                            String productId = prductId3.getText();
                                            if (databaseControl.weigthtUpdate(data, productId)) {
                                                jCheckBox6.setEnabled(true);
                                                jCheckBox7.setEnabled(true);
                                                jCheckBox8.setEnabled(true);
                                                jCheckBox9.setEnabled(true);
                                                jCheckBox10.setEnabled(true);
                                                jCheckBox11.setEnabled(true);
                                                displayproducts();
                                                JOptionPane.showMessageDialog(jPanel3, "Update Recieved");
                                            } else {
                                                JOptionPane.showMessageDialog(jPanel3, "Error occurred");

                                            }
                                        } else if (jCheckBox9.isSelected()) {
                                            String productId = productId4.getText();
                                            if (databaseControl.weigthtUpdate(data, productId)) {
                                                jCheckBox6.setEnabled(true);
                                                jCheckBox7.setEnabled(true);
                                                jCheckBox8.setEnabled(true);
                                                jCheckBox9.setEnabled(true);
                                                jCheckBox10.setEnabled(true);
                                                jCheckBox11.setEnabled(true);
                                                displayproducts();
                                                JOptionPane.showMessageDialog(jPanel3, "Update Recieved");
                                            } else {
                                                JOptionPane.showMessageDialog(jPanel3, "Error occurred");

                                            }
                                        } else if (jCheckBox11.isSelected()) {
                                            String productId = productId5.getText();
                                            if (databaseControl.weigthtUpdate(data, productId)) {
                                                jCheckBox6.setEnabled(true);
                                                jCheckBox7.setEnabled(true);
                                                jCheckBox8.setEnabled(true);
                                                jCheckBox9.setEnabled(true);
                                                jCheckBox10.setEnabled(true);
                                                jCheckBox11.setEnabled(true);
                                                displayproducts();
                                                JOptionPane.showMessageDialog(jPanel3, "Update Recieved");
                                            } else {
                                                JOptionPane.showMessageDialog(jPanel3, "Error occurred");

                                            }
                                        }
                                    }
                                } catch (NumberFormatException sizeException) {
                                    JOptionPane.showMessageDialog(jPanel3, "Invalid Weight");
                                }
                            } else if (jCheckBox4.isSelected()) {
                                float newPrice = 0;
                                try {
                                    newPrice = Float.parseFloat(data);
                                    if (newPrice == Float.parseFloat(data))
                                        //update db
                                        if (jCheckBox6.isSelected()) {
                                            String productId = productId1.getText();
                                            if (databaseControl.priceUpdate(data, productId)) {
                                                jCheckBox6.setEnabled(true);
                                                jCheckBox7.setEnabled(true);
                                                jCheckBox8.setEnabled(true);
                                                jCheckBox9.setEnabled(true);
                                                jCheckBox10.setEnabled(true);
                                                jCheckBox11.setEnabled(true);
                                                displayproducts();
                                                JOptionPane.showMessageDialog(jPanel3, "Update Recieved");
                                            } else {
                                                JOptionPane.showMessageDialog(jPanel3, "Error occurred");

                                            }
                                        } else if (jCheckBox7.isSelected()) {
                                            String productId = productId2.getText();
                                            if (databaseControl.priceUpdate(data, productId)) {
                                                jCheckBox6.setEnabled(true);
                                                jCheckBox7.setEnabled(true);
                                                jCheckBox8.setEnabled(true);
                                                jCheckBox9.setEnabled(true);
                                                jCheckBox10.setEnabled(true);
                                                jCheckBox11.setEnabled(true);
                                                displayproducts();
                                                JOptionPane.showMessageDialog(jPanel3, "Update Recieved");
                                            } else {
                                                JOptionPane.showMessageDialog(jPanel3, "Error occurred");

                                            }
                                        } else if (jCheckBox8.isSelected()) {
                                            String productId = prductId3.getText();
                                            if (databaseControl.priceUpdate(data, productId)) {
                                                jCheckBox6.setEnabled(true);
                                                jCheckBox7.setEnabled(true);
                                                jCheckBox8.setEnabled(true);
                                                jCheckBox9.setEnabled(true);
                                                jCheckBox10.setEnabled(true);
                                                jCheckBox11.setEnabled(true);
                                                displayproducts();
                                                JOptionPane.showMessageDialog(jPanel3, "Update Recieved");
                                            } else {
                                                JOptionPane.showMessageDialog(jPanel3, "Error occurred");

                                            }
                                        } else if (jCheckBox9.isSelected()) {
                                            String productId = productId4.getText();
                                            if (databaseControl.priceUpdate(data, productId)) {
                                                jCheckBox6.setEnabled(true);
                                                jCheckBox7.setEnabled(true);
                                                jCheckBox8.setEnabled(true);
                                                jCheckBox9.setEnabled(true);
                                                jCheckBox10.setEnabled(true);
                                                jCheckBox11.setEnabled(true);
                                                displayproducts();
                                                JOptionPane.showMessageDialog(jPanel3, "Update Recieved");
                                            } else {
                                                JOptionPane.showMessageDialog(jPanel3, "Error occurred");

                                            }
                                        } else if (jCheckBox11.isSelected()) {
                                            String productId = productId5.getText();
                                            if (databaseControl.priceUpdate(data, productId)) {
                                                jCheckBox6.setEnabled(true);
                                                jCheckBox7.setEnabled(true);
                                                jCheckBox8.setEnabled(true);
                                                jCheckBox9.setEnabled(true);
                                                jCheckBox10.setEnabled(true);
                                                jCheckBox11.setEnabled(true);
                                                displayproducts();
                                                JOptionPane.showMessageDialog(jPanel3, "Update Recieved");
                                            } else {
                                                JOptionPane.showMessageDialog(jPanel3, "Error occurred");

                                            }
                                        }
                                    {
                                        valid = true;
                                    }
                                } catch (NumberFormatException exception) {
                                    JOptionPane.showMessageDialog(jPanel3, "Invalid price");
                                }
                            }

                        }
                    }

                }
            }

        });
        displayproducts();
        jButton10.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                if(jCheckBox6.isSelected()){
                    int result= JOptionPane.showConfirmDialog(jPanel4,"Confirm to Edit");
                    switch (result){
                        case JOptionPane.YES_OPTION :
                            //code
                            String productId=productId1.getText();
                            String[] info= databaseControl.productUpdate(productId);
                            name.setText(info[0]);
                            size.setText(info[1]);
                            weight.setText(info[2]);
                            price.setText(info[3]);
                            color.setText(info[4]);
                            jCheckBox7.setEnabled(false);
                            jCheckBox8.setEnabled(false);
                            jCheckBox9.setEnabled(false);
                            jCheckBox10.setEnabled(false);
                            jCheckBox11.setEnabled(false);
                            break;
                        case JOptionPane.NO_OPTION:
                            //code
                            break;
                        case JOptionPane.CANCEL_OPTION:
                            //code
                            break;
                        case JOptionPane.CLOSED_OPTION:
                            //code
                            break;
                    }

                }
                else if(jCheckBox7.isSelected()){

                    int result= JOptionPane.showConfirmDialog(jPanel4,"Confirm to Edit");
                    switch (result){
                        case JOptionPane.YES_OPTION :
                            //code
                            String productId=productId1.getText();
                            String[] info= databaseControl.productUpdate(productId);
                            name.setText(info[0]);
                            size.setText(info[1]);
                            weight.setText(info[2]);
                            price.setText(info[3]);
                            color.setText(info[4]);
                            jCheckBox6.setEnabled(false);
                            jCheckBox8.setEnabled(false);
                            jCheckBox9.setEnabled(false);
                            jCheckBox10.setEnabled(false);
                            jCheckBox11.setEnabled(false);
                            break;
                        case JOptionPane.NO_OPTION:
                            //code
                            break;
                        case JOptionPane.CANCEL_OPTION:
                            //code
                            break;
                        case JOptionPane.CLOSED_OPTION:
                            //code
                            break;
                    }
                }
                else if(jCheckBox8.isSelected()){
                    int result= JOptionPane.showConfirmDialog(jPanel4,"Confirm to Edit");
                    switch (result){
                        case JOptionPane.YES_OPTION :
                            //code
                            String productId=prductId3.getText();
                            String[] info= databaseControl.productUpdate(productId);
                            name.setText(info[0]);
                            size.setText(info[1]);
                            weight.setText(info[2]);
                            price.setText(info[3]);
                            color.setText(info[4]);
                            jCheckBox6.setEnabled(false);
                            jCheckBox7.setEnabled(false);
                            jCheckBox9.setEnabled(false);
                            jCheckBox10.setEnabled(false);
                            jCheckBox11.setEnabled(false);
                            break;
                        case JOptionPane.NO_OPTION:
                            //code
                            break;
                        case JOptionPane.CANCEL_OPTION:
                            //code
                            break;
                        case JOptionPane.CLOSED_OPTION:
                            //code
                            break;
                    }

                }
                else if(jCheckBox9.isSelected()){

                    int result= JOptionPane.showConfirmDialog(jPanel4,"Confirm to Edit");
                    switch (result){
                        case JOptionPane.YES_OPTION :
                            //code
                            String productId=productId4.getText();
                            String[] info= databaseControl.productUpdate(productId);
                            name.setText(info[0]);
                            size.setText(info[1]);
                            weight.setText(info[2]);
                            price.setText(info[3]);
                            color.setText(info[4]);
                            jCheckBox6.setEnabled(false);
                            jCheckBox7.setEnabled(false);
                            jCheckBox8.setEnabled(false);
                            jCheckBox10.setEnabled(false);
                            jCheckBox11.setEnabled(false);
                            break;
                        case JOptionPane.NO_OPTION:
                            //code
                            break;
                        case JOptionPane.CANCEL_OPTION:
                            //code
                            break;
                        case JOptionPane.CLOSED_OPTION:
                            //code
                            break;
                    }

                }
                else if(jCheckBox11.isSelected()){

                    int result= JOptionPane.showConfirmDialog(jPanel4,"Confirm to Edit");
                    switch (result){
                        case JOptionPane.YES_OPTION :
                            String productId=productId5.getText();
                            String[] info= databaseControl.productUpdate(productId);
                            name.setText(info[0]);
                            size.setText(info[1]);
                            weight.setText(info[2]);
                            price.setText(info[3]);
                            color.setText(info[4]);
                            jCheckBox6.setEnabled(false);
                            jCheckBox7.setEnabled(false);
                            jCheckBox8.setEnabled(false);
                            jCheckBox10.setEnabled(false);
                            jCheckBox9.setEnabled(false);
                            break;
                        case JOptionPane.NO_OPTION:
                            //code
                            break;
                        case JOptionPane.CANCEL_OPTION:
                            //code
                            break;
                        case JOptionPane.CLOSED_OPTION:
                            //code
                            break;
                    }

                }
            }
        });

        jButton7.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String data=Update.getText();
            }
        });
        displayProductsInAssessment();
        jButton8.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                if(jCheckBox6.isSelected()){
                    String productId=productId1.getText();
                    String[] info= databaseControl.productUpdate(productId);
                    if(databaseControl.productassessment(info[0],info[1],info[2],info[3],info[4],productId)){
                        displayProductsInAssessment();
                    }else {
                        JOptionPane.showMessageDialog(jPanel4,"ERROR");
                    }
                }
                else if(jCheckBox7.isSelected()){
                    String productId=productId2.getText();
                    String[] info= databaseControl.productUpdate(productId);
                    if(databaseControl.productassessment(info[0],info[1],info[2],info[3],info[4],productId)){
                        displayProductsInAssessment();
                    }else {
                        JOptionPane.showMessageDialog(jPanel4,"ERROR");
                    }
                }
                else if(jCheckBox8.isSelected()){
                    String productId=prductId3.getText();
                    String[] info= databaseControl.productUpdate(productId);
                    if(databaseControl.productassessment(info[0],info[1],info[2],info[3],info[4],productId)){
                        displayProductsInAssessment();
                    }else {
                        JOptionPane.showMessageDialog(jPanel4,"ERROR");
                    }
                }
                else if(jCheckBox9.isSelected()){
                    String productId=productId4.getText();
                    String[] info= databaseControl.productUpdate(productId);
                    if(databaseControl.productassessment(info[0],info[1],info[2],info[3],info[4],productId)){
                        displayProductsInAssessment();
                    }else {
                        JOptionPane.showMessageDialog(jPanel4,"ERROR");
                    }
                }
                else if(jCheckBox11.isSelected()){
                    String productId=productId5.getText();
                    String[] info= databaseControl.productUpdate(productId);
                    if(databaseControl.productassessment(info[0],info[1],info[2],info[3],info[4],productId)){
                        displayProductsInAssessment();
                    }else {
                        JOptionPane.showMessageDialog(jPanel4,"ERROR");
                    }
                }
                else {

                        JOptionPane.showMessageDialog(jPanel4,"No Items Selected");

                }
            }
        });
        jButton9.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(jCheckBox6.isSelected()){
                    if(databaseControl.deleteproduct(productId1.getText())){
                        displayproducts();
                    }
                }
                else if(jCheckBox7.isSelected()){
                    if(databaseControl.deleteproduct(productId2.getText())){
                        displayproducts();
                    }
                }
                else if(jCheckBox8.isSelected()){
                    if(databaseControl.deleteproduct(prductId3.getText())){
                        displayproducts();
                    }
                }
                else if(jCheckBox9.isSelected()){
                    if(databaseControl.deleteproduct(productId4.getText())){
                        displayproducts();
                    }
                }
                else if(jCheckBox11.isSelected()){
                    if(databaseControl.deleteproduct(productId5.getText())){
                        displayproducts();
                    }
                }
                else {
                }

            }
        });
        jButton11.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                buyers buyers = new buyers();

                if(jCheckBox12.isSelected()){
                    String productId=productId1.getText();
                  int tweeter=  databaseControl.countTweeter(productId);
                  int facebook=  databaseControl.countfacebook(productId);
                  int instagram=  databaseControl.countInstagram(productId);
                  int whatsapp=  databaseControl.countWhatsap(productId);
                  int tiktok=  databaseControl.countTiktok(productId);
//                  int mode =max(tiktok,facebook,instagram,whatsapp,tweeter);
                  double teachers = buyers.probabilityOfTeacherBuying(productId);
                  double docotors = buyers.probabilityOfDoctorBuying(productId);
                  double business = buyers.probabilityOfBusinessBuying(productId);
                  double industry = buyers.probabilityOfIndustryBuying(productId);
                  double farmers =buyers.probabilityOfFarmerBuying(productId);

                  jTextArea1.setText("This is the breakdown of response in percentage probability \n" +
                          "of your assessed product\n" +
                          "Teachers: "+teachers+"%.\n" +
                          "Doctors: "+docotors+"%\n" +
                          "Farmers: "+farmers+"%\n" +
                          "Busness People: "+business+"%\n" +
                          "Industry People: "+industry+"%"
                  );
                }
                else if(jCheckBox13.isSelected()){
                    String productId=productId2.getText();
                    double teachers = buyers.probabilityOfTeacherBuying(productId);
                    double docotors = buyers.probabilityOfDoctorBuying(productId);
                    double business = buyers.probabilityOfBusinessBuying(productId);
                    double industry = buyers.probabilityOfIndustryBuying(productId);
                    double farmers =buyers.probabilityOfFarmerBuying(productId);
                    jTextArea1.setText("This is the breakdown of response in percentage probability \n" +
                            "of your assessed product\n" +
                            "Teachers: "+teachers+"%.\n" +
                            "Doctors: "+docotors+"%\n" +
                            "Farmers: "+farmers+"%\n" +
                            "Busness People: "+business+"%\n" +
                            "Industry People: "+industry+"%"
                    );

                }
                else if(jCheckBox14.isSelected()){
                    String productId=prductId3.getText();
                    double teachers = buyers.probabilityOfTeacherBuying(productId);
                    double docotors = buyers.probabilityOfDoctorBuying(productId);
                    double business = buyers.probabilityOfBusinessBuying(productId);
                    double industry = buyers.probabilityOfIndustryBuying(productId);
                    double farmers =buyers.probabilityOfFarmerBuying(productId);
                    jTextArea1.setText("This is the breakdown of response in percentage probability \n" +
                            "of your assessed product\n" +
                            "Teachers: "+teachers+"%.\n" +
                            "Doctors: "+docotors+"%\n" +
                            "Farmers: "+farmers+"%\n" +
                            "Busness People: "+business+"%\n" +
                            "Industry People: "+industry+"%"
                    );
                }
                else if(jCheckBox15.isSelected()){
                    String productId=productId4.getText();
                    double teachers = buyers.probabilityOfTeacherBuying(productId);
                    double docotors = buyers.probabilityOfDoctorBuying(productId);
                    double business = buyers.probabilityOfBusinessBuying(productId);
                    double industry = buyers.probabilityOfIndustryBuying(productId);
                    double farmers =buyers.probabilityOfFarmerBuying(productId);
                    jTextArea1.setText("This is the breakdown of response in percentage probability \n" +
                            "of your assessed product\n" +
                            "Teachers: "+teachers+"%.\n" +
                            "Doctors: "+docotors+"%\n" +
                            "Farmers: "+farmers+"%\n" +
                            "Busness People: "+business+"%\n" +
                            "Industry People: "+industry+"%"
                    );
                }
                else if(jCheckBox16.isSelected()){
                    String productId=productId5.getText();
                    double teachers = buyers.probabilityOfTeacherBuying(productId);
                    double docotors = buyers.probabilityOfDoctorBuying(productId);
                    double business = buyers.probabilityOfBusinessBuying(productId);
                    double industry = buyers.probabilityOfIndustryBuying(productId);
                    double farmers =buyers.probabilityOfFarmerBuying(productId);
                    jTextArea1.setText("This is the breakdown of response in percentage probability \n" +
                            "of your assessed product\n" +
                            "Teachers: "+teachers+"%.\n" +
                            "Doctors: "+docotors+"%\n" +
                            "Farmers: "+farmers+"%\n" +
                            "Busness People: "+business+"%\n" +
                            "Industry People: "+industry+"%"
                    );

                }
                else {

                    JOptionPane.showMessageDialog(jPanel4,"No Items Selected");

                }
            }
        });
        jButton12.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(jCheckBox12.isSelected()){
                    String productId=productId1.getText();
                    if(databaseControl.deleteproductInAssessment(productId)){
                        displayProductsInAssessment();
                        JOptionPane.showMessageDialog(jPanel5,"Deleted");
                    }else {
                        JOptionPane.showMessageDialog(jPanel5,"Error Occurred try again later");

                    }
                }
                else if(jCheckBox13.isSelected()){
                    String productId=productId2.getText();
                    if(databaseControl.deleteproductInAssessment(productId)){
                        displayProductsInAssessment();
                        JOptionPane.showMessageDialog(jPanel5,"Deleted");

                    }else {
                        JOptionPane.showMessageDialog(jPanel5,"Error Occurred try again later");

                    }
                }
                else if(jCheckBox14.isSelected()){
                    String productId=prductId3.getText();
                    if(databaseControl.deleteproductInAssessment(productId)){
                        displayProductsInAssessment();
                        JOptionPane.showMessageDialog(jPanel5,"Deleted");


                    }else {
                        JOptionPane.showMessageDialog(jPanel5,"Error Occurred try again later");

                    }

                }
                else if(jCheckBox15.isSelected()){
                    String productId=productId4.getText();
                    if(databaseControl.deleteproductInAssessment(productId)){
                        displayProductsInAssessment();
                        JOptionPane.showMessageDialog(jPanel5,"Deleted");

                    }else {
                        JOptionPane.showMessageDialog(jPanel5,"Error Occurred try again later");

                    }

                }
                else if(jCheckBox16.isSelected()){
                    String productId=productId5.getText();
                    if(databaseControl.deleteproductInAssessment(productId)){
                        displayProductsInAssessment();
                        JOptionPane.showMessageDialog(jPanel5,"Deleted");

                    }else {
                        JOptionPane.showMessageDialog(jPanel5,"Error Occurred try again later");

                    }


                }
                else {

                    JOptionPane.showMessageDialog(jPanel4,"No Items Selected");

                }
            }
        });
        //Activating Action checkBoxes
        buttonGroup.add(jCheckBox1);
        buttonGroup.add(jCheckBox2);
        buttonGroup.add(jCheckBox3);
        buttonGroup.add(jCheckBox4);
        buttonGroup.add(jCheckBox5);
        listButtonGroup.add(jCheckBox6);
        listButtonGroup.add(jCheckBox7);
        listButtonGroup.add(jCheckBox8);
        listButtonGroup.add(jCheckBox9);
        listButtonGroup.add(jCheckBox10);
        listButtonGroup.add(jCheckBox11);
        statusButtonGroup.add(jCheckBox12);
        statusButtonGroup.add(jCheckBox13);
        statusButtonGroup.add(jCheckBox14);
        statusButtonGroup.add(jCheckBox15);
        statusButtonGroup.add(jCheckBox16);




        jButton6.setText("Edit");

        jButton7.setText("Update");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(size, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                                        .addComponent(weight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(price, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(color, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jCheckBox5)
                                                        .addComponent(jCheckBox2)
                                                        .addComponent(jCheckBox3)
                                                        .addComponent(jCheckBox4)
                                                        .addComponent(jCheckBox1))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(Update, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7)
                                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jCheckBox1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(size, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jCheckBox2))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jCheckBox3))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jCheckBox4))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(color, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jCheckBox5))
                                .addGap(42, 42, 42)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22))
        );

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setText("Name");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setText("Product_ID");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setText("Action");

        jCheckBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox8ActionPerformed(evt);
            }
        });

        jButton9.setText("Delete");

        jButton8.setText("Assess");

        jButton10.setText("Update");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(listName3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(listName2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                                                .addComponent(listName1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addComponent(listName4, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(listName5, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGap(44, 44, 44)
                                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(productId1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(prductId3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(productId2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(productId4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(productId5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGap(66, 66, 66)
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jCheckBox11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel11)
                                                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                .addComponent(jCheckBox7)
                                                                                .addComponent(jCheckBox6)
                                                                                .addComponent(jCheckBox8)
                                                                                .addComponent(jCheckBox9)
                                                                                .addComponent(jCheckBox10)))
                                                                .addGap(0, 0, Short.MAX_VALUE)))
                                                .addGap(31, 31, 31))
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGap(38, 38, 38)
                                                .addComponent(jButton10)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel11))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(listName1, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                                                .addComponent(productId1))
                                        .addComponent(jCheckBox6))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(listName2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(productId2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jCheckBox7))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(prductId3, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                                                        .addComponent(listName3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(listName4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(productId4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(jCheckBox8)
                                                .addGap(18, 18, 18)
                                                .addComponent(jCheckBox9))
                                        .addComponent(jCheckBox10))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(listName5, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                                        .addComponent(productId5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jCheckBox11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23))
        );

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel13.setText("Name");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel14.setText("Status");

        jCheckBox16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox16ActionPerformed(evt);
            }
        });

        jButton11.setText("Complete");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Remove");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(57, 57, 57)
                                                .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                                .addComponent(productStatusId5, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(statusId5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                                .addComponent(productStatus3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(statusId3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                                .addComponent(productStatus2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(statusId2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                                .addComponent(statusProductId, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(statusId1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                                                .addComponent(productStatus4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(statusId4, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jCheckBox12)
                                                        .addComponent(jCheckBox13)
                                                        .addComponent(jCheckBox14)
                                                        .addComponent(jCheckBox15)
                                                        .addComponent(jCheckBox16))))
                                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jCheckBox15))
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(statusProductId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jCheckBox12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(statusId1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(productStatus2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jCheckBox13)
                                                        .addComponent(statusId2))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(productStatus3, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                                                                .addComponent(statusId3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addComponent(jCheckBox14))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(productStatus4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(statusId4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jCheckBox16)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(productStatusId5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(statusId5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(75, 75, 75)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(88, Short.MAX_VALUE))
        );

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel15.setText("Recommendation");
        jLabel15.setBorder(new javax.swing.border.MatteBorder(null));
        jLabel15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(187, 187, 187)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(504, Short.MAX_VALUE))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2)
                                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(57, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGap(13, 13, 13)))
                                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                        .addComponent(colorTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                                                                        .addComponent(weightTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(sizeTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(nameTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(priceTextField, javax.swing.GroupLayout.Alignment.LEADING))))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addGap(25, 25, 25)
                                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                .addGap(18, 18, 18)
                                                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                                                                                        .addComponent(sizeTextField))
                                                                                .addGap(18, 18, 18)
                                                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                                                                                        .addComponent(weightTextField))
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                                                                                        .addComponent(priceTextField))
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                                                                                        .addComponent(colorTextField))
                                                                                .addGap(35, 35, 35)
                                                                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                .addGap(18, 18, 18)
                                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        jPanel3.setVisible(true);
        String name= nameTextField.getText();
    }

    private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jCheckBox8ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jCheckBox16ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new product().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JTextField Update;
    private javax.swing.JLabel color;
    private javax.swing.JTextField colorTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTree jTree1;
    private javax.swing.JLabel listName1;
    private javax.swing.JLabel listName2;
    private javax.swing.JLabel listName3;
    private javax.swing.JLabel listName4;
    private javax.swing.JLabel listName5;
    private javax.swing.JLabel name;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel prductId3;
    private javax.swing.JLabel price;
    private javax.swing.JTextField priceTextField;
    private javax.swing.JLabel productId1;
    private javax.swing.JLabel productId2;
    private javax.swing.JLabel productId4;
    private javax.swing.JLabel productId5;
    private javax.swing.JLabel productStatus2;
    private javax.swing.JLabel productStatus3;
    private javax.swing.JLabel productStatus4;
    private javax.swing.JLabel productStatusId5;
    private javax.swing.JLabel size;
    private javax.swing.JTextField sizeTextField;
    private javax.swing.JLabel statusId1;
    private javax.swing.JLabel statusId2;
    private javax.swing.JLabel statusId3;
    private javax.swing.JLabel statusId4;
    private javax.swing.JLabel statusId5;
    private javax.swing.JLabel statusProductId;
    private javax.swing.JLabel weight;
    private javax.swing.JTextField weightTextField;

    ButtonGroup buttonGroup = new ButtonGroup();
    ButtonGroup listButtonGroup = new ButtonGroup();
    ButtonGroup statusButtonGroup = new ButtonGroup();

    productControl productControl = new productControl();
    databaseControl databaseControl = new databaseControl();
    int length = databaseControl.nameCount();
    // End of variables declaration
    public void displayproducts(){


        String[] list;
        list=productControl.displayNames();
        String[] ids;
        ids=productControl.displayproductid();
        if(length==0){
        }
        else if(length==1){
            listName1.setText(list[0]);
            productId1.setText(ids[0]);
        } else if (length==2) {
            listName1.setText(list[0]);
            productId1.setText(ids[0]);
            listName2.setText(list[1]);
            productId1.setText(ids[0]);
            productId2.setText(ids[1]);

        } else if (length==3) {
            listName1.setText(list[0]);
            listName2.setText(list[1]);
            listName3.setText(list[2]);
            productId1.setText(ids[0]);
            productId2.setText(ids[1]);
            prductId3.setText(ids[2]);
        } else if (length==4) {
            listName1.setText(list[0]);
            listName2.setText(list[1]);
            listName3.setText(list[2]);
            listName4.setText(list[3]);
            productId1.setText(ids[0]);
            productId2.setText(ids[1]);
            prductId3.setText(ids[2]);
            productId4.setText(ids[3]);
        }
        else if (length==5) {
            listName1.setText(list[0]);
            listName2.setText(list[1]);
            listName3.setText(list[2]);
            listName4.setText(list[3]);
            listName5.setText(list[4]);
            productId1.setText(ids[0]);
            productId2.setText(ids[1]);
            prductId3.setText(ids[2]);
            productId4.setText(ids[3]);
            productId5.setText(ids[4]);
        }
        else {
            listName1.setText(list[0]);
            listName2.setText(list[1]);
            listName3.setText(list[2]);
            listName4.setText(list[3]);
            listName5.setText(list[4]);
            productId1.setText(ids[0]);
            productId2.setText(ids[1]);
            prductId3.setText(ids[2]);
            productId4.setText(ids[3]);
            productId5.setText(ids[4]);
        }
    }
    public void displayProductsInAssessment(){


        String[] list;
        list=productControl.displayAssementNames();
        int length= databaseControl.AssessmentNameCount();
        if(length==0){
        }
        else if(length==1){
            statusProductId.setText(list[0]);
        } else if (length==2) {
            statusProductId.setText(list[0]);
            productStatus2.setText(list[1]);

        } else if (length==3) {
            statusProductId.setText(list[0]);
            productStatus2.setText(list[1]);
            productStatus3.setText(list[2]);
        } else if (length==4) {
            statusProductId.setText(list[0]);
            productStatus2.setText(list[1]);
            productStatus3.setText(list[2]);
            productStatus4.setText(list[3]);
        }
        else if (length==5) {
            statusProductId.setText(list[0]);
            productStatus2.setText(list[1]);
            productStatus3.setText(list[2]);
            productStatus4.setText(list[3]);
            productStatus4.setText(list[4]);
        }
        else {
            statusProductId.setText(list[0]);
            productStatus2.setText(list[1]);
            productStatus3.setText(list[2]);
            productStatus4.setText(list[3]);
            productStatus4.setText(list[4]);
        }
    }

}
